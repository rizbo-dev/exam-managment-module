framework:
    messenger:
        transports:
            response_saga_item_transport:
                serializer: messenger.transport.symfony_serializer
                dsn: '%env(RESPONSE_SAGA_ITEM_TRANSPORT_DSN)%'
                options:
                    exchange:
                        name: response-saga-item
                        type: direct
                        default_publish_routing_key: response-saga-item
                    queues:
                        response-saga-item:
                            binding_keys: [ 'response-saga-item' ]

            user_class_verification_transport:
                serializer: messenger.transport.symfony_serializer
                dsn: '%env(USER_CLASS_VERIFICATION_TRANSPORT_DSN)%'
                options:
                    auto_setup: false
                    exchange:
                        name: user-class-verification
                        type: direct
                        default_publish_routing_key: user-class-verification
                    queues:
                        user-class-verification:
                            binding_keys: ['user-class-verification']
            user_wallet_validation_transport:
                serializer: messenger.transport.symfony_serializer
                dsn: '%env(USER_WALLET_VALIDATION_TRANSPORT_DSN)%'
                options:
                    auto_setup: false
                    exchange:
                        name: user-wallet-validation
                        type: direct
                        default_publish_routing_key: user-wallet-validation
                    queues:
                        user-wallet-validation:
                            binding_keys: [ 'user-wallet-validation' ]
            user_wallet_insert_transport:
                serializer: messenger.transport.symfony_serializer
                dsn: '%env(USER_WALLET_INSERT_TRANSPORT_DSN)%'
                options:
                    auto_setup: false
                    exchange:
                        name: user-wallet-insert
                        type: direct
                        default_publish_routing_key: user-wallet-insert
                    queues:
                        user-wallet-insert:
                            binding_keys: [ 'user-wallet-insert' ]

        routing:
            'App\Message\UserClassVerificationMessage': user_class_verification_transport
            'App\Message\ResponseSagaItemMessage': response_saga_item_transport
            'App\Message\UserWalletValidationMessage': user_wallet_validation_transport
            'App\Message\UserWalletInsertMessage': user_wallet_insert_transport

# when@test:
#    framework:
#        messenger:
#            transports:
#                # replace with your transport name here (e.g., my_transport: 'in-memory://')
#                # For more Messenger testing tools, see https://github.com/zenstruck/messenger-test
#                async: 'in-memory://'
